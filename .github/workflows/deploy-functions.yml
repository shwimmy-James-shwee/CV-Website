name: Deploy Functions App

on:
  push:
    branches: ['dev', 'qa', 'staging']
    paths:
      - 'apps/functions/**'
      - 'libs/**'
      - '.github/workflows/deploy-functions.yml'
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: which env to deploy the changes to
        options:
          - dev
          # - uat
          # - main
        default: dev
env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './prod/functions' # set this to the path to your function app project, defaults to the repository root
  NODE_VERSION: 'v20.15.1'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build FA
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.15.1]

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js Environment - Version ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Add Commit Message to File
        run: |
          git log -4 --date=format-local:'%Y-%m-%d %H:%M:%S' >> ./apps/functions/git_commit_msg.txt
          command git --no-pager log -1 --format="%ai" >> ./apps/functions/git_commit_msg.txt
          echo ${{ github.run_id }} >> ./apps/functions/git_commit_msg.txt

      - name: 'Resolve Project Dependencies Using Npm'
        shell: bash
        run: |
          pnpm install --frozen-lockfile --filter="./libs/**/" --filter="./apps/functions/" 
          pnpm build --filter="./libs/**/" --filter="./apps/functions/"
          pnpm deploy --filter="./apps/functions/" --prod ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

          pushd '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          pnpm db:generate
          cp -r ./node_modules/@core/db/node_modules/.prisma ./node_modules/
          popd
        env:
          CI: true

      - name: Upload FA Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fa-app
          path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          retention-days: 1

  deploy:
    runs-on: opch # For Non KPMG Agent (Host), use ubuntu-latest
    name: Deploy FA
    needs: [build]
    environment: ${{ (contains(github.ref_type, 'tag') && 'prod') || github.ref_name }}
    env:
      AZURE_CONTAINER_REGISTRY_NAME: ${{ vars.PROJECT_NAME_ABBREVIATION }}acr${{ vars.ENV }}
      AZURE_CONTAINER_REGISTRY: ${{ vars.PROJECT_NAME_ABBREVIATION }}acr${{ vars.ENV }}.azurecr.io

    steps:
      - name: Download FE App artifacts
        uses: actions/download-artifact@v4
        with:
          name: fa-app
          path: ./dist/

      - name: Add Commit Message to File
        run: |
          cd ./dist
          ls -la
      # - name: 'Login via Azure CLI'
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: 'Run Azure Functions Action'
      #   uses: Azure/functions-action@v1
      #   id: fa
      #   with:
      #     app-name: '${{ vars.PROJECT_NAME_ABBREVIATION }}-fa-${{ vars.ENV }}'
      #     package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
      #     scm-do-build-during-deployment: false
      #     enable-oryx-build: false
