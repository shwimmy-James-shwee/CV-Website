name: Deploy Frontend
on:
  push:
    branches: ['dev', 'qa', 'staging']
    paths:
      - 'apps/frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: which env to deploy the changes to
        options:
          - dev
          - uat
          - main
        default: null
      deploy_storybook:
        type: boolean
        description: deploy storybook
        default: true
env:
  NODE_VERSION: 'v20.15.1'

jobs:
  deploy:
    name: Deploy to Cloud
    runs-on: opch
    environment: ${{github.event.inputs.name || (contains(github.ref_type, 'tag') && 'prod') || github.ref_name }}
    env:
      FE_STORAGE_ACCOUNT: ${{ vars.PROJECT_NAME_ABBREVIATION }}fe${{ vars.ENV }}
      FE_SB_STORAGE_ACCOUNT: ${{ vars.PROJECT_NAME_ABBREVIATION }}sbfe${{ vars.ENV }}
      AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
      VITE_B2C_CLIENT_ID: ${{ vars.VITE_B2C_CLIENT_ID }}
      VITE_B2C_TENANT_NAME: ${{ vars.VITE_B2C_TENANT_NAME }}
      VITE_POLICY_NAME_EDIT_PROFILE: ${{ vars.VITE_POLICY_NAME_EDIT_PROFILE }}
      VITE_POLICY_NAME_RESET: ${{ vars.VITE_POLICY_NAME_RESET }}
      VITE_POLICY_NAME_SIGN_IN_UP: ${{ vars.VITE_POLICY_NAME_SIGN_IN_UP }}
      VITE_API_URL: ${{ vars.VITE_API_URL }}

    steps:
      - uses: actions/checkout@v3

      - name: Branch name
        run: echo running on branch ${GITHUB_REF##*/} - ${{github.ref_name}} - ${{github.event.inputs.name || (contains(github.ref_type, 'tag') && 'prod') || github.ref_name }}

      - uses: pnpm/action-setup@v4
      - name: Setup Node.js Environment - Version ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: PNPM Install and Build
        run: |
          pnpm install --frozen-lockfile --filter="./libs/**/" --filter="./apps/frontend/" 
          pnpm run build --filter="./apps/frontend/"  --filter="./libs/**/"
        env:
          CI: true

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Push to FE Storage
        run: |
          export AZURE_STORAGE_KEY=$(az storage account keys list -n $FE_STORAGE_ACCOUNT -g $AZURE_RESOURCE_GROUP -o tsv --query '[0].value')
          az storage account show -n $FE_STORAGE_ACCOUNT --query networkRuleSet
          az storage blob upload-batch --account-name $FE_STORAGE_ACCOUNT --auth-mode key -d '$web' -s "./apps/frontend/dist" --overwrite

      - name: Storybook Build
        continue-on-error: true
        run: |
          pnpm run build-storybook --filter="./apps/frontend/"

      - name: Push to Storybook FE Storage
        continue-on-error: true
        run: |
          export AZURE_STORAGE_KEY=$(az storage account keys list -n $FE_SB_STORAGE_ACCOUNT -g $AZURE_RESOURCE_GROUP -o tsv --query '[0].value')
          az storage account show -n $FE_SB_STORAGE_ACCOUNT --query networkRuleSet
          az storage blob upload-batch --account-name $FE_SB_STORAGE_ACCOUNT --auth-mode key -d '$web' -s "./apps/frontend/storybook-static" --overwrite
